##########################################
#                                        #
#          此配置仅供参考,不建议使用         #
#                                        #
##########################################

# 浏览官方手册（https://manual.nssurge.com/）
# 帮助中心（https://nssurge.zendesk.com/）
# 技术社区（https://community.nssurge.com）




# 高级设置
[General]
# ------(通用)------
# > 延迟测试
# > Internet 测试 URL
internet-test-url = http://www.aliyun.com

# > 代理测速 URL
proxy-test-url = http://www.gstatic.com/generate_204

# > 测速超时 (s)
test-timeout = 5

# > TLS 引擎
# > TLS Provider: default, secure-transport, network-framework, openssl (默认: default)
tls-provider = openssl

# > IPv6 支持
ipv6 = true

#===============================================================================

# ------(Wi-Fi 访问)------
# > 允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = false

# > HTTP 代理服务端口（默认 "6152"）
wifi-access-http-port = 6152

# > SOCKS5 代理服务端口（默认 "6153"）
wifi-access-socks5-port = 6153

#===============================================================================

# ------(远程控制器)------
# > 允许 Surge 请求查看器或 Surge CLI 进行管理控制。
# > 如果允许由 Wi-Fi 控制则将「127.0.0.1」修改为「0.0.0.0」
external-controller-access = password@0.0.0.0:6170

#===============================================================================

# ------(兼容性)------
# > 兼容模式（默认 "禁用"）
compatibility-mode = 0

# > 跳过某个域名或者 IP 段，这些目标主机将不会由 Surge Proxy 处理。
# > (macOS 版本中，如果启用了 Set as System Proxy, 这些值会被写入到系统网络代理设置.)
skip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local, mfs.ykimg.com*.ttf

# > 排除简单主机名
exclude-simple-hostnames = true

# > SSID 组策略
# > 当 Wi-Fi 不是首选网络时 SSID 组策略使用默认策略（仅 macOS 版）
use-default-policy-if-wifi-not-primary = false

#===============================================================================

# ------(DNS 服务器)------
# > DNS 服务器
# > 电信 118.118.118.118
# > 联通 116.116.116.116
dns-server = 119.29.29.29,223.5.5.5,system

#===============================================================================

# ------(实验性功能)------
# > 启动 Network.framework（默认不启用）
network-framework = false

#===============================================================================

# ------(高级)------
# > 日志等级 warning, notify, info, verbose (默认: notify)
loglevel = notify

# > 其他（请先阅读手册，除非你明确知道其含义，否则不要修改任何设置）
# > 当遇到 REJECT 策略时返回错误页
show-error-page-for-reject = true

# > Always Real IP Hosts
# > 当 Surge VIF 处理 DNS 问题时，此选项要求 Surge 返回一个真正的 IP 地址，而不是一个假 IP 地址。
# > DNS 数据包将被转发到上游 DNS 服务器。
always-real-ip = msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com

# > Hijack DNS
# > 默认情况下，Surge 只返回发送到 Surge DNS 地址的 DNS 查询的假 IP 地址(198.18.0.2)。
# > 有些设备或软件总是使用硬编码的 DNS 服务器。 (例如 Google Speakers 总是使用 8.8.8.8)。 您可以使用此选项劫持查询，以获得一个假地址。
hijack-dns = 8.8.8.8:53, 8.8.4.4:53

# > TCP Force HTTP Hosts
# > 让 Surge 把 TCP 连接当作 HTTP 请求来处理。Surge HTTP 引擎将处理这些请求，所有的高级功能，如捕获、重写和脚本等都可以使用。
force-http-engine-hosts = *.ott.cibntv.net,123.59.31.1,119.18.193.135,122.14.246.33,175.102.178.52

# > VIF Excluded Routes
# > Surge VIF 只能处理 TCP 和 UDP 协议。使用此选项可以绕过特定的 IP 范围，允许所有流量通过。
tun-excluded-routes = 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12

# > VIF Included Routes
# > 默认情况下，Surge VIF 接口会声明自己是默认路由。但是，由于 Wi-Fi 接口的路由较小，有些流量可能不会通过 Surge VIF 接口。使用此选项可以添加一条较小的路由。
tun-included-routes = 192.168.1.12/32

#===============================================================================




# 该段定义抓取流量的过滤
[Replica]
# ------(实验性功能)------
# > [抓取流量] => 过滤器
# > 0 为关闭，1 为开启
# > 隐藏 Apple 请求
hide-apple-request = 0

# > 隐藏 Crashlytics 请求
hide-crash-reporter-request = 0

# > 隐藏 UDP 会话
hide-udp = 0

# > 关键词过滤器
# none（关闭关键词过滤器） / whitelist（blacklist（仅记录包含关键字的请求）） / blacklist（仅记录不包含关键字的请求） / pattern（匹配通配符的请求）
keyword-filter-type = none

# > 关键词
# keyword-filter = (null)

#===============================================================================




# 该段定义可用的代理策略
[Proxy]
# > 不使用代理，直接连接
🎯𝒟𝒾𝓇ℯ𝒸𝓉 = direct

# > 阻止请求
⛔️ℛℯ𝒿ℯ𝒸𝓉 = reject

# > 🇨🇳TheHub = ss, 1.2.3.4, 443, encrypt-method=chacha20-ietf-poly1305, password=password
# > 🇺🇸LosSantos = vmess, v2ray.cool, 443, username=a3482e88-686a-4a58-8126-99c9df64b7bf, tls=true, ws=true, ws-path=/v2ray.cool/
# > 🇭🇰Sandbox = trojan, trojan.com, 443, password=password

# > 利用服务器定义的方式实现的广告通过选择
# > Ad-Pass 不拦截广告，Ad-Block 直接拒绝，Ad-GIF 返回一个透明像素图
# > Ad-Pass = direct
# > Ad-Block = reject
# > Ad-GIF = reject-tinygif

# > 该段定义可用的策略组
# > 有 4 种策略组类型: "select", "url-test"，"fallback" 和 "ssid"
# > select: 具体哪个子策略将被使用，由用户界面上进行选择。
# > url-test: 具体哪个子策略将被使用，通过测试到具体 URL 的访问速度选择
# > fallback: 具体哪个子策略将被使用，通过测试到具体 URL 的可用性决定
# > ssid: 具体哪个子策略将被使用，根据 Wi-FI 的 SSID 决定

#===============================================================================




# 该段定义可用的策略组
[Proxy Group]
# > 白名单模式 🖲️ PROXY，黑名单模式 🎯 DIRECT
🧭 ℱ𝒾𝓃𝒶𝓁 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🖲️ 𝒫𝓇ℴ𝓍𝓎

# > 节点选项
🖲️ 𝒫𝓇ℴ𝓍𝓎 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, policy-path=https://sub.store/download/collection/surge, update-interval=0

# > 策略分组
🚫 ℬ𝒶𝓃𝓁𝒾𝓈𝓉𝓈 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, ⛔️ℛℯ𝒿ℯ𝒸𝓉

🔰 ℋ𝒾𝒿𝒶𝒸𝓀𝒾𝓃ℊ = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, ⛔️ℛℯ𝒿ℯ𝒸𝓉

📡 𝒢𝓁ℴ𝒷𝒶𝓁 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🖲️ 𝒫𝓇ℴ𝓍𝓎, 🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ, 🇺🇸 𝒰𝓃𝒾𝓉ℯ𝒹 𝒮𝓉𝒶𝓉ℯ𝓈

📽️ 𝒢𝓁ℴ𝒷𝒶𝓁ℳℯ𝒹𝒾𝒶 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🖲️ 𝒫𝓇ℴ𝓍𝓎, 🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ, 🇺🇸 𝒰𝓃𝒾𝓉ℯ𝒹 𝒮𝓉𝒶𝓉ℯ𝓈

🌐 𝒢ℴℴℊ𝓁ℯ = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🖲️ 𝒫𝓇ℴ𝓍𝓎, 🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ

🖥️ ℳ𝒾𝒸𝓇ℴ𝓈ℴ𝒻𝓉 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🖲️ 𝒫𝓇ℴ𝓍𝓎, 🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ

📟 𝒯𝓌𝒾𝓉𝓉ℯ𝓇 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🖲️ 𝒫𝓇ℴ𝓍𝓎, 🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ

📲 𝒯ℯ𝓁ℯℊ𝓇𝒶𝓂 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🇼🇸 𝒯𝒶𝒾𝓌𝒶𝓃

🎬 𝒴ℴ𝓊𝒯𝓊𝒷ℯ = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🖲️ 𝒫𝓇ℴ𝓍𝓎, 🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ

📺 𝒩ℯ𝓉𝒻𝓁𝒾𝓍 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🇸🇬 𝒮𝒾𝓃ℊ𝒶𝓅ℴ𝓇ℯ

🎵 𝒯𝒾𝓀𝒯ℴ𝓀 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🇯🇵 𝒥𝒶𝓅𝒶𝓃, 🇰🇷 𝒦ℴ𝓇ℯ𝒶

🍎 𝒜𝓅𝓅𝓁ℯ = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, 🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ, 🇺🇸 𝒰𝓃𝒾𝓉ℯ𝒹 𝒮𝓉𝒶𝓉ℯ𝓈

🎸 𝒩ℯ𝓉ℯ𝒶𝓈ℯℳ𝓊𝓈𝒾𝒸 = select, 🎯𝒟𝒾𝓇ℯ𝒸𝓉, policy-path=https://raw.githubusercontent.com/Spades-2/NeteaseMusic/master/Surge-Music, update-interval=0

# > 节点分组
🇭🇰 ℋℴ𝓃ℊ 𝒦ℴ𝓃ℊ = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=Hong Kong|香港

🇼🇸 𝒯𝒶𝒾𝓌𝒶𝓃 = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=Taiwan|台湾

🇺🇸 𝒰𝓃𝒾𝓉ℯ𝒹 𝒮𝓉𝒶𝓉ℯ𝓈 = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=USA|美国

🇯🇵 𝒥𝒶𝓅𝒶𝓃 = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=Japan|日本

🇰🇷 𝒦ℴ𝓇ℯ𝒶 = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=Korea|首尔|韩国

🇸🇬 𝒮𝒾𝓃ℊ𝒶𝓅ℴ𝓇ℯ = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=Singapore|新加坡

🇬🇧 𝒰𝓃𝒾𝓉ℯ𝒹 𝒦𝒾𝓃ℊ𝒹ℴ𝓂 = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=United Kingdom

🇺🇳 𝒩𝒶𝓉𝒾ℴ𝓃𝓈 = select, policy-path=https://sub.store/download/collection/surge, update-interval=0, policy-regex-filter=^((?!Hong Kong|香港|Taiwan|台湾|USA|美国|Japan|日本|Korea|Singapore|新加坡|United Kingdom).)*$

#===============================================================================




# 规则定义部分
[Rule]
# > Client
# > Proxy
PROCESS-NAME,v2ray,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,ss-local,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,UUBooster,🎯𝒟𝒾𝓇ℯ𝒸𝓉

# > Download
PROCESS-NAME,aria2c,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,fdm,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,Folx,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,NetTransport,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,Thunder,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,Transmission,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,uTorrent,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,WebTorrent,🎯𝒟𝒾𝓇ℯ𝒸𝓉
PROCESS-NAME,WebTorrent Helper,🎯𝒟𝒾𝓇ℯ𝒸𝓉

# ------Rulesets (规则集）------
# > Unbreak (后续规则修正)
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list,🎯𝒟𝒾𝓇ℯ𝒸𝓉

# > Advertising (广告)
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, 🚫 ℬ𝒶𝓃𝓁𝒾𝓈𝓉𝓈

# > Privacy (隐私)
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list, 🔰 ℋ𝒾𝒿𝒶𝒸𝓀𝒾𝓃ℊ

# > Hijacking (运营商劫持或恶意网站)
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list, 🔰 ℋ𝒾𝒿𝒶𝒸𝓀𝒾𝓃ℊ

# > TikTok
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/TikTok.list, 🎵 𝒯𝒾𝓀𝒯ℴ𝓀

# > YouTube
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/YouTube.list, 🎬 𝒴ℴ𝓊𝒯𝓊𝒷ℯ

# > Netflix
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/Netflix.list, 📺 𝒩ℯ𝓉𝒻𝓁𝒾𝓍

# > GlobalMedia
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list, 📽️ 𝒢𝓁ℴ𝒷𝒶𝓁ℳℯ𝒹𝒾𝒶

# > Google
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Google/Google.list, 🌐 𝒢ℴℴℊ𝓁ℯ

# > Microsoft
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Microsoft/Microsoft.list, 🖥️ ℳ𝒾𝒸𝓇ℴ𝓈ℴ𝒻𝓉

# > Twitter
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Twitter.list, 📟 𝒯𝓌𝒾𝓉𝓉ℯ𝓇

# > Telegram
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/Telegram.list, 📲 𝒯ℯ𝓁ℯℊ𝓇𝒶𝓂

# > Global
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, 📡 𝒢𝓁ℴ𝒷𝒶𝓁

# > Apple
RULE-SET, https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/Apple_CDN.list, DIRECT
RULE-SET, https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/Apple_API.list, 🍎 𝒜𝓅𝓅𝓁ℯ

# > NetEaseMusic
RULE-SET, https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/NetEaseMusic/NetEaseMusic.list, 🎸 𝒩ℯ𝓉ℯ𝒶𝓈ℯℳ𝓊𝓈𝒾𝒸

# > China
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, 🎯𝒟𝒾𝓇ℯ𝒸𝓉

# > Local Area Network 局域网
IP-CIDR,192.168.0.0/16,🎯𝒟𝒾𝓇ℯ𝒸𝓉
IP-CIDR,10.0.0.0/8,🎯𝒟𝒾𝓇ℯ𝒸𝓉
IP-CIDR,172.16.0.0/12,🎯𝒟𝒾𝓇ℯ𝒸𝓉
IP-CIDR,127.0.0.0/8,🎯𝒟𝒾𝓇ℯ𝒸𝓉
IP-CIDR,100.64.0.0/10,🎯𝒟𝒾𝓇ℯ𝒸𝓉
IP-CIDR,224.0.0.0/4,🎯𝒟𝒾𝓇ℯ𝒸𝓉

# > ChinaIP
# 使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确的问题，使用 ChinaIP.list 时禁用「GEOIP,CN」规则
RULE-SET, https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/ChinaIP.list,🎯𝒟𝒾𝓇ℯ𝒸𝓉

# > GeoIP China(若启用，则禁用 ChinaIP.list)
# GEOIP,CN,🎯𝒟𝒾𝓇ℯ𝒸𝓉

# > DNS 查询失败走 Final 规则
FINAL,🧭 ℱ𝒾𝓃𝒶𝓁,dns-failed

#===============================================================================




# 覆盖系统DNS，设置和配置本地DNS映射记录
[Host]
# > 该段定义本地 DNS 记录
# > 该功能等同于 /etc/hosts，加上了泛解析和别名支持。

# > Firebase Cloud Messaging
mtalk.google.com = 108.177.125.188

# > PCBeta
pcbeta.com = 36.27.212.81
uc.pcbeta.com = 36.27.212.81
m.pcbeta.com = 36.27.212.81
mac.pcbeta.com = 36.27.212.81
static.template.pcbeta.com = 36.27.212.81
web.pcbeta.com = 36.27.212.81
i.pcbeta.com = 36.27.212.81
bbs.pcbeta.com = 36.27.212.81
www.pcbeta.com = 36.27.212.81
cdn.pcbeta.attachment.inimc.com = 36.27.212.81
cdn.pcbeta.static.inimc.com = 36.27.212.81
cdn.pcbeta.css.inimc.com = 36.27.212.81

#===============================================================================




# 该段定义针对 HTTP 请求的 URL 重定向规则
[URL Rewrite]
# > 有两种重定向方式: "header" 和 "302"
# > 建议用模块

# > Redirect Google Search Service
^(http|https):\/\/(www.)?(g|google)\.cn https://www.google.com 302

#===============================================================================




[MITM]
# > 是否跳过服务端证书验证
skip-server-cert-verify = true

# > 是否用于TCP连接
tcp-connection = false

# > 主机名
hostname = www.google.cn, api.abema.io

# > P12密码
ca-passphrase = E90A2D8E

# > base64编码过的P12文件
ca-p12 = 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

#===============================================================================




# 使用 JavaScript 来对修改请求体、响应体、定时执行脚本、特定事件执行脚本、规则判定、policy-group判定、执行DNS解析等
[Script]
# ------ <dompling https://github.com/dompling/Script> ------
# > 每日一言
每日一言=type=cron, cronexp=0 9 * * *, script-path=https://raw.githubusercontent.com/dompling/Script/master/oneSay/oneSay.js, script-update-interval=0

# > 历史上的今天
历史上的今天=type=cron, cronexp=0 9 * * *, script-path=https://raw.githubusercontent.com/dompling/Script/master/historyToday/index.js, script-update-interval=0


# ------ <chavyleung https://github.com/chavyleung/scripts> ------
# > bilibili
# > 打开浏览器访问: https://www.bilibili.com 或 https://live.bilibili.com
bilibili=type=cron, cronexp=3 0 * * *, script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/bilibili/bilibili.js, script-update-interval=0
# > 如需银瓜子转硬币，取消下方注释
bilibili=type=cron, cronexp=3 0 * * *, script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/bilibili/bilibili.silver2coin.js, script-update-interval=0

# > 网易云音乐
# > 1. 先登录: <https://music.163.com/m/login>
# > 2. 再访问: <https://music.163.com/#/user/level>
# > 3. 提示: `获取会话: 成功!`
网易云音乐=type=cron, cronexp=3 0 * * *, script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/neteasemusic/quanx/neteasemusic.js, script-update-interval=0

# >腾讯视频
# > 1.手机浏览器访问并登录: https://film.qq.com/
腾讯视频=type=cron, cronexp=4 0 * * *, script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/videoqq/videoqq.js, script-update-interval=0

# > 芒果TV
# > 打开 APP 然后手动签到 1 次
芒果TV=type=cron, cronexp=4 0 * * *, script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/mgtv/mgtv.js, script-update-interval=0

# > 美团
# > 打开 APP , 然后手动签到 1 次, (`首页` > `红包签到`) 
美团=type=cron, cronexp=4 0 * * *, script-path=https://raw.githubusercontent.com/chavyleung/scripts/master/meituan/meituan.js, script-update-interval=0


# ---  <Nobyda https://github.com/NobyDa/Script/tree/master>  ---
# > 京东
京东=type=cron, cronexp=5 0 * * *, script-path=https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js, script-update-interval=0

# > 爱奇艺
# > 打开App,访问下右下角 `我的
爱奇艺=type=cron, cronexp=5 0 * * *, script-path=https://raw.githubusercontent.com/NobyDa/Script/master/iQIYI-DailyBonus/iQIYI.js, script-update-interval=0

# > 百度贴吧
# > 打开App,访问下右下角 `我的
百度贴吧=type=cron, cronexp=5 0 * * *, script-path=https://raw.githubusercontent.com/NobyDa/Script/master/BDTieBa-DailyBonus/TieBa.js, script-update-interval=0


# ------ <songyangzz https://github.com/songyangzz/QuantumultX> ------
# > 饿了么   
# > 打开 APP, 访问下`我的`>`签到领红包`(左上角)
饿了么=type=cron, cronexp=6 0 * * *, script-path=https://raw.githubusercontent.com/songyangzz/QuantumultX/master/elem/elemSign.js, script-update-interval=0


# ------ <Peng-YM https://github.com/Peng-YM/QuanX/tree/master/Tasks> ------
# > 彩云天气
彩云天气=type=cron, cronexp=10 8-22/2 * * *, script-path=https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/caiyun.js, script-update-interval=0

# > 汇率变化
汇率变化=type=cron, cronexp=0 9 * * *, script-path=https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/exchange.js, script-update-interval=0

# > 疫情日报
疫情日报=type=cron, cronexp=0 9 * * *, script-path=https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/nCov.js, script-update-interval=0


# ------ <lxk0301 https://github.com/lxk0301/scripts> ------
# > 京东摇钱树
京东摇钱树=type=cron, cronexp=15 */5 * * *, wake-system=1, timeout=130, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_moneyTree.js, script-update-interval=0

# > 京东宠汪汪
京东宠汪汪=type=cron, cronexp=15 */2 * * *, wake-system=1, timeout=330, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy.js, script-update-interval=0

# > 京东天天加速
京东天天加速=type=cron, cronexp=8 */3 * * *, wake-system=1, timeout=130, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_speed.js, script-update-interval=0

# > 东东农场
东东农场=type=cron, cronexp=5 6-18/6 * * *, wake-system=1, timeout=530, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_fruit.js, script-update-interval=0

# > 东东萌宠
东东萌宠=type=cron, cronexp=20 7-19/6 * * *, wake-system=1, timeout=530, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_pet.js, script-update-interval=0

# > 种豆得豆
种豆得豆=type=cron, cronexp=1 7-21/2 * * *, wake-system=1, timeout=630, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_plantBean.js, script-update-interval=0

# > 京小超
京小超=type=cron, cronexp=11 1-23/5 * * *, wake-system=1, timeout=530, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_superMarket.js, script-update-interval=0

# > 宠汪汪积分兑换奖品
宠汪汪积分兑换奖品=type=cron, cronexp=1 0,8,12,16 * * *, wake-system=1, timeout=30, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy_reward.js, script-update-interval=0

# > 取关京东店铺商品
取关京东店铺商品=type=cron, cronexp=55 23 * * *, wake-system=1, timeout=250, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_unsubscribe.js, script-update-interval=0

# > 宠汪汪偷好友积分与狗粮
宠汪汪偷好友积分与狗粮=type=cron, cronexp=0 0,6 * * *, wake-system=1, timeout=420, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_joy_steal.js, script-update-interval=0

# > 京小超领蓝币
京小超领蓝币=type=cron, cronexp=20 5 * * *, wake-system=1, timeout=30, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_blueCoin.js, script-update-interval=0

# > 进店领豆
进店领豆=type=cron, cronexp=10 0 * * *, wake-system=1, timeout=30, script-path=https://raw.githubusercontent.com/lxk0301/jd_scripts/master/jd_shop.js, script-update-interval=0







